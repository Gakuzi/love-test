// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
console.log('üß™ –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const TEST_CONFIG = {
    waitTime: 2000, // –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –º–µ–∂–¥—É –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    loadingTestTime: 10000, // –í—Ä–µ–º—è –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    scrollDelay: 500
};

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const TestUtils = {
    wait: (ms) => new Promise(resolve => setTimeout(resolve, ms)),
    
    log: (message, type = 'info') => {
        const colors = {
            success: '‚úÖ',
            error: '‚ùå',
            warning: '‚ö†Ô∏è',
            info: '‚ÑπÔ∏è',
            test: 'üî¨'
        };
        console.log(`${colors[type]} ${message}`);
    },
    
    click: async (selector) => {
        const element = document.querySelector(selector);
        if (element) {
            element.click();
            TestUtils.log(`–ö–ª–∏–∫ –Ω–∞ ${selector}`, 'test');
            await TestUtils.wait(500);
            return true;
        }
        TestUtils.log(`–≠–ª–µ–º–µ–Ω—Ç ${selector} –Ω–µ –Ω–∞–π–¥–µ–Ω`, 'error');
        return false;
    },
    
    checkElement: (selector, description) => {
        const element = document.querySelector(selector);
        const exists = element && element.offsetParent !== null;
        TestUtils.log(`${description}: ${exists ? '–ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`, exists ? 'success' : 'error');
        return exists;
    },
    
    checkText: (selector, expectedText, description) => {
        const element = document.querySelector(selector);
        if (element && element.textContent.includes(expectedText)) {
            TestUtils.log(`${description}: —Ç–µ–∫—Å—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π`, 'success');
            return true;
        }
        TestUtils.log(`${description}: —Ç–µ–∫—Å—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π`, 'error');
        return false;
    }
};

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function runFullTest() {
    const results = {
        passed: 0,
        failed: 0,
        tests: []
    };
    
    function addTest(name, passed) {
        results.tests.push({ name, passed });
        if (passed) results.passed++;
        else results.failed++;
    }
    
    try {
        // 1. –¢–µ—Å—Ç –∑–∞—Å—Ç–∞–≤–∫–∏ –∏ –∑–∞–≥—Ä—É–∑–∫–∏
        TestUtils.log('=== –¢–ï–°–¢ 1: –ó–ê–°–¢–ê–í–ö–ê –ò –ó–ê–ì–†–£–ó–ö–ê ===', 'test');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞—Å—Ç–∞–≤–∫–∏
        addTest('–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞—Å—Ç–∞–≤–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è', TestUtils.checkElement('.modern-loading-screen', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞—Å—Ç–∞–≤–∫–∞'));
        addTest('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç', TestUtils.checkElement('#progressContainer', '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞'));
        addTest('–¶–∏—Ç–∞—Ç–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç', TestUtils.checkElement('#rotatingQuote', '–í—Ä–∞—â–∞—é—â–∞—è—Å—è —Ü–∏—Ç–∞—Ç–∞'));
        
        // –ñ–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
        TestUtils.log('–û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏...', 'info');
        await TestUtils.wait(TEST_CONFIG.loadingTestTime);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ä—Ç–∞
        addTest('–ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç–∞ –ø–æ—è–≤–∏–ª–∞—Å—å', TestUtils.checkElement('#startButton', '–ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç–∞'));
        addTest('–°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø–æ—è–≤–∏–ª–æ—Å—å', TestUtils.checkElement('#completionMessage', '–°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏'));
        
        // 2. –¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞
        TestUtils.log('=== –¢–ï–°–¢ 2: –ó–ê–ü–£–°–ö –¢–ï–°–¢–ê ===', 'test');
        
        // –ö–ª–∏–∫–∞–µ–º –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ä—Ç–∞
        const startClicked = await TestUtils.click('#startButton');
        addTest('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —Å—Ç–∞—Ä—Ç–∞', startClicked);
        
        await TestUtils.wait(TEST_CONFIG.waitTime);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≤–æ–ø—Ä–æ—Å–∞–º
        addTest('–ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤–æ–ø—Ä–æ—Å–∞–º', TestUtils.checkElement('#question-container', '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤–æ–ø—Ä–æ—Å–æ–≤'));
        addTest('–ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è', TestUtils.checkElement('#questionCard', '–ö–∞—Ä—Ç–æ—á–∫–∞ –≤–æ–ø—Ä–æ—Å–∞'));
        addTest('–ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç', TestUtils.checkElement('#progressBar', '–ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä'));
        
        // 3. –¢–µ—Å—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º
        TestUtils.log('=== –¢–ï–°–¢ 3: –ù–ê–í–ò–ì–ê–¶–ò–Ø –ü–û –í–û–ü–†–û–°–ê–ú ===', 'test');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
        addTest('–ù–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π', TestUtils.checkText('#questionNumber', '–í–æ–ø—Ä–æ—Å 1 –∏–∑ 5', '–ù–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞'));
        addTest('–ë–ª–æ–∫ —Ç–µ–≥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç', TestUtils.checkElement('#blockTag', '–¢–µ–≥ –±–ª–æ–∫–∞'));
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –æ—Ç–≤–µ—Ç–∞ –∏ –ø–µ—Ä–µ—Ö–æ–¥
        for (let i = 0; i < 5; i++) {
            TestUtils.log(`–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–æ–ø—Ä–æ—Å ${i + 1}...`, 'info');
            
            // –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞
            const optionClicked = await TestUtils.click('.option');
            addTest(`–í—ã–±–æ—Ä –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å ${i + 1}`, optionClicked);
            
            await TestUtils.wait(500);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ –æ–ø—Ü–∏–∏
            addTest(`–û–ø—Ü–∏—è –≤—ã–¥–µ–ª–µ–Ω–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å–µ ${i + 1}`, TestUtils.checkElement('.option.selected', '–í—ã–¥–µ–ª–µ–Ω–Ω–∞—è –æ–ø—Ü–∏—è'));
            
            // –ö–ª–∏–∫–∞–µ–º "–î–∞–ª–µ–µ"
            const nextClicked = await TestUtils.click('#nextBtn');
            addTest(`–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç –≤–æ–ø—Ä–æ—Å–∞ ${i + 1}`, nextClicked);
            
            await TestUtils.wait(TEST_CONFIG.waitTime);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –±–ª–æ–∫–æ–≤
            if ((i + 1) % 5 === 0 && i < 19) {
                const blockNum = Math.floor(i / 5) + 1;
                addTest(`–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–ª–æ–∫–∞ ${blockNum}`, 
                    TestUtils.checkElement(`#blockResult${blockNum}`, `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–ª–æ–∫–∞ ${blockNum}`));
                
                // –ö–ª–∏–∫–∞–µ–º "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
                await TestUtils.wait(1000);
                const continueClicked = await TestUtils.click('#continueBtn');
                addTest(`–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –±–ª–æ–∫–∞ ${blockNum}`, continueClicked);
                await TestUtils.wait(TEST_CONFIG.waitTime);
            }
        }
        
        // 4. –¢–µ—Å—Ç –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –±–ª–æ–∫–æ–≤ (—É–ø—Ä–æ—â—ë–Ω–Ω–æ)
        TestUtils.log('=== –¢–ï–°–¢ 4: –û–°–¢–ê–õ–¨–ù–´–ï –ë–õ–û–ö–ò ===', 'test');
        
        for (let block = 2; block <= 4; block++) {
            TestUtils.log(`–ë–ª–æ–∫ ${block}...`, 'info');
            
            for (let q = 0; q < 5; q++) {
                await TestUtils.click('.option');
                await TestUtils.wait(300);
                await TestUtils.click('#nextBtn');
                await TestUtils.wait(500);
            }
            
            if (block < 4) {
                // –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                await TestUtils.wait(1000);
                addTest(`–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–ª–æ–∫–∞ ${block}`, TestUtils.checkElement(`#blockResult${block}`, `–ë–ª–æ–∫ ${block} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã`));
                await TestUtils.click('#continueBtn');
                await TestUtils.wait(TEST_CONFIG.waitTime);
            }
        }
        
        // 5. –¢–µ—Å—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        TestUtils.log('=== –¢–ï–°–¢ 5: –§–ò–ù–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ ===', 'test');
        
        await TestUtils.wait(2000);
        
        addTest('–§–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è', TestUtils.checkElement('#finalResults', '–§–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã'));
        addTest('–û–±—â–∏–π –±–∞–ª–ª –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç', TestUtils.checkElement('#overallScore', '–û–±—â–∏–π –±–∞–ª–ª'));
        addTest('–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç', TestUtils.checkElement('#recommendations', '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏'));
        
        // 6. –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ "–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞"
        TestUtils.log('=== –¢–ï–°–¢ 6: –§–£–ù–ö–¶–ò–Ø –ü–ï–†–ï–ó–ê–ü–£–°–ö–ê ===', 'test');
        
        const restartClicked = await TestUtils.click('#restartBtn');
        addTest('–ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞" —Ä–∞–±–æ—Ç–∞–µ—Ç', restartClicked);
        
        await TestUtils.wait(TEST_CONFIG.waitTime);
        
        addTest('–í–æ–∑–≤—Ä–∞—Ç –∫ –∑–∞—Å—Ç–∞–≤–∫–µ', TestUtils.checkElement('#loadingScreen', '–ó–∞—Å—Ç–∞–≤–∫–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞'));
        
        // 7. –¢–µ—Å—Ç –∫–Ω–æ–ø–∫–∏ –ø–æ–º–æ—â–∏
        TestUtils.log('=== –¢–ï–°–¢ 7: –ö–ù–û–ü–ö–ê –ü–û–ú–û–©–ò ===', 'test');
        
        addTest('–ö–Ω–æ–ø–∫–∞ –ø–æ–º–æ—â–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç', TestUtils.checkElement('.help-btn-beautiful', '–ö–Ω–æ–ø–∫–∞ –ø–æ–º–æ—â–∏'));
        
        const helpClicked = await TestUtils.click('.help-btn-beautiful');
        addTest('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –ø–æ–º–æ—â–∏', helpClicked);
        
        await TestUtils.wait(1000);
        
        addTest('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–º–æ—â–∏ –æ—Ç–∫—Ä—ã–ª–æ—Å—å', TestUtils.checkElement('#helpModal.show', '–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–º–æ—â–∏'));
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        await TestUtils.click('#helpModal .close');
        await TestUtils.wait(500);
        
    } catch (error) {
        TestUtils.log(`–û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`, 'error');
        addTest('–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫', false);
    }
    
    // –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç
    TestUtils.log('=== –ò–¢–û–ì–û–í–´–ô –û–¢–ß–Å–¢ ===', 'test');
    TestUtils.log(`–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${results.tests.length}`, 'info');
    TestUtils.log(`–ü—Ä–æ–π–¥–µ–Ω–æ: ${results.passed}`, 'success');
    TestUtils.log(`–ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${results.failed}`, 'error');
    TestUtils.log(`–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${Math.round((results.passed / results.tests.length) * 100)}%`, 'info');
    
    if (results.failed > 0) {
        TestUtils.log('–ü—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã:', 'warning');
        results.tests.filter(t => !t.passed).forEach(t => {
            TestUtils.log(`- ${t.name}`, 'error');
        });
    }
    
    const overall = results.failed === 0 ? 'success' : 'warning';
    TestUtils.log(`–û–±—â–∏–π —Å—Ç–∞—Ç—É—Å: ${results.failed === 0 ? '–í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´' : '–ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´'}`, overall);
    
    return results;
}

// –§—É–Ω–∫—Ü–∏—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
async function runQuickTest() {
    TestUtils.log('üöÄ –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π...', 'test');
    
    const tests = [
        () => TestUtils.checkElement('.modern-loading-screen', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞—Å—Ç–∞–≤–∫–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è'),
        () => TestUtils.checkElement('#progressContainer', '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç'),
        () => TestUtils.checkElement('#rotatingQuote', '–¶–∏—Ç–∞—Ç–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç'),
        () => TestUtils.checkElement('.help-btn-beautiful', '–ö–Ω–æ–ø–∫–∞ –ø–æ–º–æ—â–∏ –¥–æ—Å—Ç—É–ø–Ω–∞')
    ];
    
    let passed = 0;
    tests.forEach((test, i) => {
        if (test()) {
            passed++;
            TestUtils.log(`–¢–µ—Å—Ç ${i + 1}: –ü–†–û–ô–î–ï–ù`, 'success');
        } else {
            TestUtils.log(`–¢–µ—Å—Ç ${i + 1}: –ü–†–û–í–ê–õ–ï–ù`, 'error');
        }
    });
    
    TestUtils.log(`–ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: ${passed}/${tests.length} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ`, passed === tests.length ? 'success' : 'warning');
    return passed === tests.length;
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏
window.TestSuite = {
    runFullTest,
    runQuickTest,
    TestUtils
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)
document.addEventListener('DOMContentLoaded', function() {
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –º–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    // setTimeout(() => runQuickTest(), 3000);
});

console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–æ—Ç–æ–≤–∞!');
console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:');
console.log('- TestSuite.runQuickTest() - –±—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ');
console.log('- TestSuite.runFullTest() - –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ');
console.log('- TestSuite.TestUtils - —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');